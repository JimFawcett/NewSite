@startuml
skinparam rectangle {
  BackgroundColor #EEEBDC
  BorderColor #333333
  FontStyle bold
}

' Define rectangles for each language with safe aliases
rectangle "Fortran\n(1957)" as Fortran
rectangle "Algol\n(1958)" as Algol
rectangle "Lisp\n(1958)" as Lisp
rectangle "Pascal\n(1970)" as Pascal
rectangle "C\n(1972)" as C_lang
rectangle "Prolog\n(1972)" as Prolog
rectangle "SQL\n(1970s)" as SQL
rectangle "MATLAB\n(1978)" as MATLAB
rectangle "C++\n(1979)" as Cpp
rectangle "Ada\n(1983)" as Ada
rectangle "Erlang\n(1986)" as Erlang
rectangle "Perl\n(1987)" as Perl
rectangle "Haskell\n(1990)" as Haskell
rectangle "HTML\n(1990)" as HTML
rectangle "Python\n(1991)" as Python
rectangle "Java\n(1995)" as Java
rectangle "JavaScript\n(1995)" as JavaScript
rectangle "CSS\n(1996)" as CSS
rectangle "C#\n(2000)" as CSharp
rectangle "R\n(2000)" as R_lang
rectangle "Clojure\n(2007)" as Clojure
rectangle "Go\n(2009)" as Go
rectangle "Elixir\n(2011)" as Elixir
rectangle "TypeScript\n(2012)" as TypeScript
rectangle "Swift\n(2014)" as Swift
rectangle "Rust\n(2015)" as Rust

' Draw arrows to show influence/inheritance
Fortran --> MATLAB : expressions
MATLAB --> R_lang : matrix
Fortran --> R_lang : expressions
Algol --> C_lang        : block structured
C_lang --> Cpp          : OOP
Algol --> Pascal        : block structured
Pascal --> Ada          : contract
Algol --> Java          : block structured
Algol --> JavaScript    : block structured
C_lang --> Python : class inheritance
C_lang --> Perl : strings
Algol --> Python : blk str
JavaScript --> TypeScript : typed
Java --> CSharp : Windows
Algol --> R_lang        : block structured
Algol --> Go            : block structured
Algol --> Swift         : block structured
Cpp --> Rust          : new types, ref invar
Pascal --> Go : blkstr
C_lang --> Go : expressions
HTML --> CSS : mrkup

Lisp --> Erlang : funct
Lisp --> Haskell : funct
Haskell --> Clojure : funct
Erlang --> Elixir
Erlang --> Clojure
@enduml
